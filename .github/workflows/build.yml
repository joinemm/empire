name: nix build

on:
  push:
    branches:
      - master

jobs:

  define-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.flake-show.outputs.matrix }}

    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v27

      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '.#githubActions.matrix')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    needs: define-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.define-matrix.outputs.matrix) }}
    concurrency:
      group: ${{ github.workflow }}.${{ github.event.pull_request.number || github.ref }}.${{ matrix.host }}
      cancel-in-progress: true

    steps:
      - uses: jlumbroso/free-disk-space@main

      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            trusted-public-keys = nix-gaming.cachix.org-1:nbjlureqMbRAxR1gJ/f3hxemL9svXaZF/Ees8vCUUs4= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            substituters = https://nix-gaming.cachix.org https://cache.nixos.org
            max-jobs = 2
            connect-timeout = 5
            system-features = nixos-test benchmark big-parallel kvm

      - uses: cachix/cachix-action@v14
        with:
          name: joinemm
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      
      - name: Build ${{ matrix.attr }}
        run: nixos-rebuild build -v --flake ".#${{ matrix.attr }}"
